name: Pipeline
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build tests
        run: docker build -t grszyman/docker-client-dev -f ./client/Dockerfile.dev ./client

      - name: Run tests
        run: docker run -e CI=true grszyman/docker-client-dev npm test

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build client
        run: docker build -t grszyman/complex-client ./client

      - name: Push client
        run: docker push grszyman/complex-client

      - name: Build nginx
        run: docker build -t grszyman/complex-nginx ./nginx

      - name: Push nginx
        run: docker push grszyman/complex-nginx

      - name: Build api
        run: docker build -t grszyman/complex-api ./api

      - name: Push api
        run: docker push grszyman/complex-api

      - name: Build worker
        run: docker build -t grszyman/complex-worker ./worker

      - name: Push worker
        run: docker push grszyman/complex-worker

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate deployment package
        run: zip deploy.zip docker-compose.yml

      - name: Deploy to EBS
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: test-2
          environment_name: Test2-env
          existing_bucket_name: elasticbeanstalk-us-east-2-840579016403
          region: us-east-2
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip